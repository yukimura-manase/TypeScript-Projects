{"ast":null,"code":"import { ADDNEWTODO, REMOVETODO } from '../actions/ActionCreator';\nexport const initialState = {\n  todolist: [{\n    id: 1,\n    todo: 'Reactの学習',\n    detail: 'Reactを学ぶロボ玉',\n    handler: 'ロボ玉試作1号機',\n    date: '2100-12-12',\n    start: '1995-12-12'\n  }, {\n    id: 2,\n    todo: 'TypeScriptの学習',\n    detail: 'TypeScriptを学ぶロボ玉',\n    handler: 'ロボ玉試作2号機',\n    date: '2100-12-12',\n    start: '1995-12-12'\n  }, {\n    id: 3,\n    todo: 'Nodeの学習',\n    detail: 'Nodeを学ぶロボ玉',\n    handler: 'ロボ玉試作3号機',\n    date: '2100-12-12',\n    start: '1995-12-12'\n  }]\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADDNEWTODO:\n      {\n        const copyTodo = state.todolist.slice();\n        copyTodo.push({\n          id: copyTodo.length + 1,\n          todo: action.todoData.todo,\n          detail: action.todoData.detail,\n          handler: action.todoData.handler,\n          date: action.todoData.date,\n          start: action.todoData.start\n        });\n        return { ...state,\n          todolist: copyTodo\n        };\n      }\n\n    case REMOVETODO:\n      {\n        const copyTodo = state.todolist.slice(); // コピー\n\n        copyTodo.splice(action.index, 1);\n        return { ...state,\n          todolist: copyTodo\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/yukimuramanase/Desktop/TSプロジェクト/react-ts-app/src/reducers/StoreState.tsx"],"names":["ADDNEWTODO","REMOVETODO","initialState","todolist","id","todo","detail","handler","date","start","state","action","type","copyTodo","slice","push","length","todoData","splice","index"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AAGA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAC,CACP;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,UAAX;AAAsBC,IAAAA,MAAM,EAAC,aAA7B;AAA2CC,IAAAA,OAAO,EAAC,UAAnD;AAA8DC,IAAAA,IAAI,EAAC,YAAnE;AAAgFC,IAAAA,KAAK,EAAC;AAAtF,GADO,EAEP;AAACL,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,eAAX;AAA2BC,IAAAA,MAAM,EAAC,kBAAlC;AAAqDC,IAAAA,OAAO,EAAC,UAA7D;AAAwEC,IAAAA,IAAI,EAAC,YAA7E;AAA0FC,IAAAA,KAAK,EAAC;AAAhG,GAFO,EAGP;AAACL,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC,SAAX;AAAqBC,IAAAA,MAAM,EAAC,YAA5B;AAAyCC,IAAAA,OAAO,EAAC,UAAjD;AAA4DC,IAAAA,IAAI,EAAC,YAAjE;AAA8EC,IAAAA,KAAK,EAAC;AAApF,GAHO;AADe,CAArB;AAcP;AACA,gBAAe,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAA0C;AAErD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,UAAL;AAAiB;AACb,cAAMa,QAAQ,GAAGH,KAAK,CAACP,QAAN,CAAeW,KAAf,EAAjB;AACAD,QAAAA,QAAQ,CAACE,IAAT,CACI;AACIX,UAAAA,EAAE,EAACS,QAAQ,CAACG,MAAT,GAAkB,CADzB;AAEIX,UAAAA,IAAI,EAACM,MAAM,CAACM,QAAP,CAAgBZ,IAFzB;AAGIC,UAAAA,MAAM,EAACK,MAAM,CAACM,QAAP,CAAgBX,MAH3B;AAIIC,UAAAA,OAAO,EAACI,MAAM,CAACM,QAAP,CAAgBV,OAJ5B;AAKIC,UAAAA,IAAI,EAACG,MAAM,CAACM,QAAP,CAAgBT,IALzB;AAMIC,UAAAA,KAAK,EAACE,MAAM,CAACM,QAAP,CAAgBR;AAN1B,SADJ;AAUA,eAAO,EAAE,GAAGC,KAAL;AAAYP,UAAAA,QAAQ,EAACU;AAArB,SAAP;AACH;;AACD,SAAKZ,UAAL;AAAiB;AACb,cAAMY,QAAQ,GAAGH,KAAK,CAACP,QAAN,CAAeW,KAAf,EAAjB,CADa,CAC2B;;AACxCD,QAAAA,QAAQ,CAACK,MAAT,CAAgBP,MAAM,CAACQ,KAAvB,EAA6B,CAA7B;AAEA,eAAO,EAAE,GAAGT,KAAL;AAAYP,UAAAA,QAAQ,EAACU;AAArB,SAAP;AACH;;AACD;AAAS,aAAOH,KAAP;AArBb;AAuBH,CAzBD","sourcesContent":["import { ADDNEWTODO, REMOVETODO } from '../actions/ActionCreator'\nimport { submitTodo } from '../actions/ActionCreator'\n\nexport const initialState = {\n    todolist:[ \n      {id:1,todo:'Reactの学習',detail:'Reactを学ぶロボ玉',handler:'ロボ玉試作1号機',date:'2100-12-12',start:'1995-12-12'},\n      {id:2,todo:'TypeScriptの学習',detail:'TypeScriptを学ぶロボ玉',handler:'ロボ玉試作2号機',date:'2100-12-12',start:'1995-12-12'},\n      {id:3,todo:'Nodeの学習',detail:'Nodeを学ぶロボ玉',handler:'ロボ玉試作3号機',date:'2100-12-12',start:'1995-12-12'}\n    ]\n  }\n\ntype Actions = { // actionが受け取るデータの型を定義しておく！\n    type: string,\n    index : number,\n    todoData : submitTodo\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action: Actions)=> {\n\n    switch(action.type){\n        case ADDNEWTODO: {\n            const copyTodo = state.todolist.slice()\n            copyTodo.push(\n                {\n                    id:copyTodo.length + 1,\n                    todo:action.todoData.todo,\n                    detail:action.todoData.detail,\n                    handler:action.todoData.handler,\n                    date:action.todoData.date,\n                    start:action.todoData.start\n                } \n            )\n            return { ...state, todolist:copyTodo }\n        }\n        case REMOVETODO: {\n            const copyTodo = state.todolist.slice() // コピー\n            copyTodo.splice(action.index,1)\n\n            return { ...state, todolist:copyTodo }\n        }\n        default: return state\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}