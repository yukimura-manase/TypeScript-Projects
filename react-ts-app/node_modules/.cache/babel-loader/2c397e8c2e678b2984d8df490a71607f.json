{"ast":null,"code":"var _jsxFileName = \"/Users/yukimuramanase/Desktop/TS\\u30D5\\u309A\\u30ED\\u30B7\\u3099\\u30A7\\u30AF\\u30C8/react-ts-app/src/components/TodoCreate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewTodo } from '../actions/ActionCreator';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoCreate = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLink = path => {\n    return history.push(path);\n  };\n\n  const [inputtodo, setTodo] = useState('');\n\n  const inputTodo = event => {\n    setTodo(event.target.value); // チケット名\n  };\n\n  const [inputdetail, setTodoDetail] = useState('');\n\n  const inputDetail = event => {\n    setTodoDetail(event.target.value); // チケット詳細\n  };\n\n  const [inputhandler, setHandler] = useState('');\n\n  const inputHandler = event => {\n    setHandler(event.target.value); // 担当者\n  };\n\n  const [inputdate, setDate] = useState('');\n\n  const inputDate = event => {\n    setDate(event.target.value); // 期日\n  };\n\n  const [inputstart, setStart] = useState('');\n\n  const inputStart = event => {\n    setStart(event.target.value); // 開始日\n  };\n\n  // チケット名のバリデーション\n  const inputTodoValidate = inputtodo => {\n    let pattern = /^[\\s\\S\\d]{1,20}$/; // 正規表現パターン(法則性)の作成  //「行頭から行末まで文字列・数字が1文字以上20以内のパターン」\n\n    return pattern.test(inputtodo);\n  }; // 詳細内容のバリデーション\n\n\n  const inputDetailValidate = inputdetail => {\n    let pattern = /^[\\s\\S\\d]{1,300}$/;\n    return pattern.test(inputdetail);\n  }; // 担当者のバリデーション\n\n\n  const inputHandlerValidate = inputhandler => {\n    let pattern = /^[\\s\\S\\d]{1,10}$/;\n    return pattern.test(inputhandler);\n  }; // 期日のバリデーション\n\n\n  const inputDateValidate = inputdate => {\n    //console.log(inputdate)\n    let today = new Date(); // 現在時刻の取得 => Dateオブジェクトを呼び出す！\n\n    let todayDate = new Date( // メソッドを呼び出しTodayに格納する！\n    today.getFullYear(), //年\n    today.getMonth(), //月\n    today.getDate());\n    console.log(todayDate);\n    let limitDate = new Date(inputdate);\n    console.log(limitDate);\n    console.log();\n  };\n\n  console.log(inputDateValidate(inputdate)); // 開始日のバリデーション\n\n  const inputStartValidate = inputstart => {};\n\n  const [errors, setError] = useState([]); // string型の配列が入るよと型定義\n  // バリデーション・チェック\n\n  const submitTask = () => {\n    setError([]); // 初期化\n\n    let errorlist = [];\n\n    if (inputtodo === '') {\n      errorlist.push('チケット名を入力してください');\n    } else if (!inputTodoValidate(inputtodo)) {\n      // マッチしなかったら実行\n      errorlist.push('チケット名は、1文字以上20文字以内で入力をしてください');\n    }\n\n    if (inputdetail === '') {\n      errorlist.push('詳細内容を入力してください');\n    } else if (!inputDetailValidate(inputdetail)) {\n      // マッチしなかったら実行\n      errorlist.push('詳細内容は、1文字以上300文字以内で入力をしてください');\n    }\n\n    if (inputhandler === '') {\n      errorlist.push('担当者を入力してください');\n    } else if (!inputHandlerValidate(inputhandler)) {\n      // マッチしなかったら実行\n      errorlist.push('担当者は、1文字以上10文字以内で入力をしてください');\n    }\n\n    if (inputdate === '') {\n      errorlist.push('期日を選択してください');\n    }\n\n    if (inputstart === '') {\n      errorlist.push('開始日を選択してください');\n    }\n\n    setError(errorlist);\n\n    if (errorlist.length === 0) {\n      const submitData = {\n        todo: inputtodo,\n        detail: inputdetail,\n        handler: inputhandler,\n        date: inputdate,\n        start: inputstart\n      };\n      dispatch(addNewTodo(submitData));\n      handleLink('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo\\u4F5C\\u6210\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u30C1\\u30B1\\u30C3\\u30C8\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: inputtodo,\n              placeholder: \"\\u30C1\\u30B1\\u30C3\\u30C8\\u306E\\u30BF\\u30A4\\u30C8\\u30EB\",\n              onChange: event => {\n                inputTodo(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u30C1\\u30B1\\u30C3\\u30C8\\u8A73\\u7D30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: inputdetail,\n              placeholder: \"\\u30BF\\u30B9\\u30AF\\u306E\\u8A73\\u7D30\",\n              onChange: event => {\n                inputDetail(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u62C5\\u5F53\\u8005\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: inputhandler,\n              placeholder: \"\\u62C5\\u5F53\\u8005\\u3092\\u5165\\u529B\",\n              onChange: event => {\n                inputHandler(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u671F\\u65E5(Todo\\u306E\\u671F\\u9650\\u3092\\u8A2D\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: inputdate,\n              onChange: event => {\n                inputDate(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u958B\\u59CB\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: inputstart,\n              onChange: event => {\n                inputStart(event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                submitTask();\n              },\n              children: \"Todo\\u30C1\\u30B1\\u30C3\\u30C8\\u4F5C\\u6210\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.map((error, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [\"\\u5165\\u529B\\u30A8\\u30E9\\u30FC\", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}; // ・チケット作成画面\n// 　・チケット名、詳細（内容）、担当者、期日、開始日　を入力して保存ができる => クリア\n// 　・保存ボタン押下後は一覧画面に遷移 => クリア\n// チケット作成画面　　　条件詳細 => 条件に合っているかどうか？ => バリデーション・チェック\n// -チケット名　← 1文字以上20文字以内　=> クリア\n// -詳細（内容）　←1文字以上300文字以内 => クリア\n// -担当者　1文字以上10文字以内 => クリア\n// -期日、開始日　←yyyy/mm/dd の記載方法でなければならない => 選択されているかどうかのチェック 現在との確認\n\n_s(TodoCreate, \"IjkfKEcGQCJqZ+F1n7hwfq/ICL4=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = TodoCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCreate\");","map":{"version":3,"sources":["/Users/yukimuramanase/Desktop/TSプロジェクト/react-ts-app/src/components/TodoCreate.tsx"],"names":["React","useState","useDispatch","addNewTodo","useHistory","TodoCreate","dispatch","history","handleLink","path","push","inputtodo","setTodo","inputTodo","event","target","value","inputdetail","setTodoDetail","inputDetail","inputhandler","setHandler","inputHandler","inputdate","setDate","inputDate","inputstart","setStart","inputStart","inputTodoValidate","pattern","test","inputDetailValidate","inputHandlerValidate","inputDateValidate","today","Date","todayDate","getFullYear","getMonth","getDate","console","log","limitDate","inputStartValidate","errors","setError","submitTask","errorlist","length","submitData","todo","detail","handler","date","start","map","error","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,UAAoB,GAAG,MAAK;AAAA;;AAErC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,OAAO,GAAGH,UAAU,EAA1B;;AACA,QAAMI,UAAU,GAAIC,IAAD,IAAiB;AAAE,WAAOF,OAAO,CAACG,IAAR,CAAaD,IAAb,CAAP;AAA0B,GAAhE;;AAEA,QAAM,CAACE,SAAD,EAAWC,OAAX,IAAsBX,QAAQ,CAAS,EAAT,CAApC;;AACA,QAAMY,SAAS,GAAIC,KAAD,IAAc;AAC5BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAD4B,CACA;AAC/B,GAFD;;AAIA,QAAM,CAACC,WAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAS,EAAT,CAA5C;;AACA,QAAMkB,WAAW,GAAIL,KAAD,IAAc;AAC9BI,IAAAA,aAAa,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CAD8B,CACI;AACrC,GAFD;;AAIA,QAAM,CAACI,YAAD,EAAcC,UAAd,IAA4BpB,QAAQ,CAAS,EAAT,CAA1C;;AACA,QAAMqB,YAAY,GAAIR,KAAD,IAAc;AAC/BO,IAAAA,UAAU,CAACP,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAD+B,CACA;AAClC,GAFD;;AAIA,QAAM,CAACO,SAAD,EAAWC,OAAX,IAAsBvB,QAAQ,CAAS,EAAT,CAApC;;AACA,QAAMwB,SAAS,GAAIX,KAAD,IAAe;AAC7BU,IAAAA,OAAO,CAACV,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAD6B,CACD;AAC/B,GAFD;;AAIA,QAAM,CAACU,UAAD,EAAYC,QAAZ,IAAwB1B,QAAQ,CAAS,EAAT,CAAtC;;AACA,QAAM2B,UAAU,GAAId,KAAD,IAAe;AAC9Ba,IAAAA,QAAQ,CAACb,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CAD8B,CACD;AAChC,GAFD;;AAYA;AACA,QAAMa,iBAAiB,GAAIlB,SAAD,IAAsB;AAC5C,QAAImB,OAAO,GAAG,kBAAd,CAD4C,CACV;;AAClC,WAAOA,OAAO,CAACC,IAAR,CAAapB,SAAb,CAAP;AACH,GAHD,CAzCqC,CA8CrC;;;AACA,QAAMqB,mBAAmB,GAAIf,WAAD,IAAwB;AAChD,QAAIa,OAAO,GAAG,mBAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAad,WAAb,CAAP;AACH,GAHD,CA/CqC,CAoDrC;;;AACA,QAAMgB,oBAAoB,GAAIb,YAAD,IAAyB;AAClD,QAAIU,OAAO,GAAG,kBAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaX,YAAb,CAAP;AACH,GAHD,CArDqC,CA0DrC;;;AACA,QAAMc,iBAAiB,GAAIX,SAAD,IAAqB;AAE1C;AAED,QAAIY,KAAK,GAAG,IAAIC,IAAJ,EAAZ,CAJ2C,CAIpB;;AAEvB,QAAIC,SAAS,GAAG,IAAID,IAAJ,EAAU;AAC/BD,IAAAA,KAAK,CAACG,WAAN,EADqB,EACA;AACrBH,IAAAA,KAAK,CAACI,QAAN,EAFqB,EAEH;AAClBJ,IAAAA,KAAK,CAACK,OAAN,EAHqB,CAAhB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAIA,QAAIM,SAAS,GAAG,IAAIP,IAAJ,CAASb,SAAT,CAAhB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEAF,IAAAA,OAAO,CAACC,GAAR;AAIH,GAvBD;;AAwBAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,iBAAiB,CAACX,SAAD,CAA7B,EAnFqC,CAqFrC;;AACA,QAAMqB,kBAAkB,GAAIlB,UAAD,IAAuB,CAEjD,CAFD;;AAIA,QAAM,CAACmB,MAAD,EAASC,QAAT,IAAqB7C,QAAQ,CAAW,EAAX,CAAnC,CA1FqC,CA0Fa;AAElD;;AACA,QAAM8C,UAAU,GAAG,MAAI;AAEnBD,IAAAA,QAAQ,CAAC,EAAD,CAAR,CAFmB,CAEN;;AAEb,QAAIE,SAAmB,GAAG,EAA1B;;AAEA,QAAGrC,SAAS,KAAK,EAAjB,EAAoB;AAChBqC,MAAAA,SAAS,CAACtC,IAAV,CAAe,gBAAf;AACH,KAFD,MAEO,IAAG,CAACmB,iBAAiB,CAAClB,SAAD,CAArB,EAAiC;AAAE;AACtCqC,MAAAA,SAAS,CAACtC,IAAV,CAAe,8BAAf;AACH;;AAED,QAAGO,WAAW,KAAK,EAAnB,EAAsB;AAClB+B,MAAAA,SAAS,CAACtC,IAAV,CAAe,eAAf;AACH,KAFD,MAEO,IAAG,CAACsB,mBAAmB,CAACf,WAAD,CAAvB,EAAqC;AAAE;AAC1C+B,MAAAA,SAAS,CAACtC,IAAV,CAAe,8BAAf;AACH;;AAED,QAAGU,YAAY,KAAK,EAApB,EAAuB;AACnB4B,MAAAA,SAAS,CAACtC,IAAV,CAAe,cAAf;AACH,KAFD,MAEO,IAAG,CAACuB,oBAAoB,CAACb,YAAD,CAAxB,EAAuC;AAAE;AAC5C4B,MAAAA,SAAS,CAACtC,IAAV,CAAe,4BAAf;AACH;;AAED,QAAGa,SAAS,KAAK,EAAjB,EAAoB;AAChByB,MAAAA,SAAS,CAACtC,IAAV,CAAe,aAAf;AACH;;AAED,QAAGgB,UAAU,KAAK,EAAlB,EAAqB;AACjBsB,MAAAA,SAAS,CAACtC,IAAV,CAAe,cAAf;AACH;;AAEDoC,IAAAA,QAAQ,CAACE,SAAD,CAAR;;AAEA,QAAGA,SAAS,CAACC,MAAV,KAAqB,CAAxB,EAA0B;AAEtB,YAAMC,UAAsB,GAAG;AAC3BC,QAAAA,IAAI,EAACxC,SADsB;AAE3ByC,QAAAA,MAAM,EAACnC,WAFoB;AAG3BoC,QAAAA,OAAO,EAACjC,YAHmB;AAI3BkC,QAAAA,IAAI,EAAC/B,SAJsB;AAK3BgC,QAAAA,KAAK,EAAC7B;AALqB,OAA/B;AAQApB,MAAAA,QAAQ,CACJH,UAAU,CAAC+C,UAAD,CADN,CAAR;AAIA1C,MAAAA,UAAU,CAAC,GAAD,CAAV;AACH;AAEJ,GAnDD;;AAqDA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACI;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,KAAK,EAAEG,SAAd;AAAyB,cAAA,WAAW,EAAC,wDAArC;AAAiD,cAAA,QAAQ,EAAGG,KAAD,IAAS;AAAED,gBAAAA,SAAS,CAACC,KAAD,CAAT;AAAkB;AAAxF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAU,cAAA,KAAK,EAAEG,WAAjB;AAA8B,cAAA,WAAW,EAAC,sCAA1C;AAAmD,cAAA,QAAQ,EAAGH,KAAD,IAAS;AAAEK,gBAAAA,WAAW,CAACL,KAAD,CAAX;AAAoB;AAA5F;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAaI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,KAAK,EAAEM,YAAd;AAA4B,cAAA,WAAW,EAAC,sCAAxC;AAAiD,cAAA,QAAQ,EAAGN,KAAD,IAAS;AAAEQ,gBAAAA,YAAY,CAACR,KAAD,CAAZ;AAAqB;AAA3F;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAmBI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAES,SAA1B;AAAqC,cAAA,QAAQ,EAAGT,KAAD,IAAS;AAAEW,gBAAAA,SAAS,CAACX,KAAD,CAAT;AAAkB;AAA5E;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAyBI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAEY,UAA1B;AAAsC,cAAA,QAAQ,EAAGZ,KAAD,IAAS;AAAEc,gBAAAA,UAAU,CAACd,KAAD,CAAV;AAAmB;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eA+BI;AAAA,iCACI;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAG,MAAI;AAACiC,gBAAAA,UAAU;AAAG,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBACKF,MAAM,CAACW,GAAP,CACG,CAACC,KAAD,EAAOC,KAAP,KAAgB;AACZ,oCACI;AAAA,0CACI;AAAA,iEAAUA,KAAK,GAAG,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA,mBAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,wBADJ;AAMH,eARJ;AADL;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CA5MM,C,CA8MP;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;;GA1NarD,U;UAEQH,W,EAEDE,U;;;KAJPC,U","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addNewTodo } from '../actions/ActionCreator'\nimport { useHistory } from 'react-router-dom'\n\nexport const TodoCreate: React.FC = ()=> {\n\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const handleLink = (path: string)=> { return history.push(path)}\n    \n    const [inputtodo,setTodo] = useState<string>('') \n    const inputTodo = (event: any)=>{\n        setTodo(event.target.value) // チケット名\n    }\n\n    const [inputdetail,setTodoDetail] = useState<string>('')\n    const inputDetail = (event: any)=>{\n        setTodoDetail(event.target.value) // チケット詳細\n    }\n\n    const [inputhandler,setHandler] = useState<string>('')\n    const inputHandler = (event: any)=>{\n        setHandler(event.target.value) // 担当者\n    }\n\n    const [inputdate,setDate] = useState<string>('')\n    const inputDate = (event: any)=> {\n        setDate(event.target.value) // 期日\n    }\n\n    const [inputstart,setStart] = useState<string>('')\n    const inputStart = (event: any)=> {\n        setStart(event.target.value) // 開始日\n    }\n\n    type submitTodo = {\n        todo: string,\n        detail: string,\n        handler: string,\n        date: string,\n        start: string\n    }\n\n    // チケット名のバリデーション\n    const inputTodoValidate = (inputtodo: string)=> {\n        let pattern = /^[\\s\\S\\d]{1,20}$/  // 正規表現パターン(法則性)の作成  //「行頭から行末まで文字列・数字が1文字以上20以内のパターン」\n        return pattern.test(inputtodo)\n    }\n\n    // 詳細内容のバリデーション\n    const inputDetailValidate = (inputdetail: string)=> {\n        let pattern = /^[\\s\\S\\d]{1,300}$/\n        return pattern.test(inputdetail)\n    }\n\n    // 担当者のバリデーション\n    const inputHandlerValidate = (inputhandler: string)=> {\n        let pattern = /^[\\s\\S\\d]{1,10}$/\n        return pattern.test(inputhandler)\n    }\n\n    // 期日のバリデーション\n    const inputDateValidate = (inputdate: string)=>{\n\n         //console.log(inputdate)\n\n        let today = new Date() // 現在時刻の取得 => Dateオブジェクトを呼び出す！\n\n        let todayDate = new Date( // メソッドを呼び出しTodayに格納する！\n\t\t\ttoday.getFullYear(), //年\n\t\t\ttoday.getMonth(), //月\n\t\t\ttoday.getDate(), //日\n\t\t)\n\n        console.log(todayDate)\n\n       \n\n        let limitDate = new Date(inputdate)\n        console.log(limitDate)\n\n        console.log()\n        \n\n\n    }\n    console.log(inputDateValidate(inputdate))\n\n    // 開始日のバリデーション\n    const inputStartValidate = (inputstart: string)=> {\n\n    }\n\n    const [errors, setError] = useState<string[]>([]) // string型の配列が入るよと型定義\n\n    // バリデーション・チェック\n    const submitTask = ()=>{\n\n        setError([]) // 初期化\n\n        let errorlist: string[] = []\n\n        if(inputtodo === ''){\n            errorlist.push('チケット名を入力してください')\n        } else if(!inputTodoValidate(inputtodo)){ // マッチしなかったら実行\n            errorlist.push('チケット名は、1文字以上20文字以内で入力をしてください')\n        }\n\n        if(inputdetail === ''){\n            errorlist.push('詳細内容を入力してください')\n        } else if(!inputDetailValidate(inputdetail)){ // マッチしなかったら実行\n            errorlist.push('詳細内容は、1文字以上300文字以内で入力をしてください')\n        }\n\n        if(inputhandler === ''){\n            errorlist.push('担当者を入力してください')\n        } else if(!inputHandlerValidate(inputhandler)){ // マッチしなかったら実行\n            errorlist.push('担当者は、1文字以上10文字以内で入力をしてください')\n        }\n\n        if(inputdate === ''){\n            errorlist.push('期日を選択してください')\n        }\n\n        if(inputstart === ''){\n            errorlist.push('開始日を選択してください') \n        }\n\n        setError(errorlist)\n\n        if(errorlist.length === 0){\n\n            const submitData: submitTodo = {\n                todo:inputtodo,\n                detail:inputdetail,\n                handler:inputhandler,\n                date:inputdate,\n                start:inputstart\n            }\n    \n            dispatch(\n                addNewTodo(submitData)\n            )\n    \n            handleLink('/')\n        }\n\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Todo作成画面</h2>\n\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <h3>チケット名</h3>\n                            <input value={inputtodo} placeholder='チケットのタイトル' onChange={(event)=>{ inputTodo(event) }} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <h3>チケット詳細</h3>\n                            <textarea value={inputdetail} placeholder='タスクの詳細' onChange={(event)=>{ inputDetail(event) }} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <h3>担当者</h3>\n                            <input value={inputhandler} placeholder='担当者を入力' onChange={(event)=>{ inputHandler(event) }} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <h3>期日(Todoの期限を設定してください)</h3>\n                            <input type='date' value={inputdate} onChange={(event)=>{ inputDate(event) }} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <h3>開始日</h3>\n                            <input type='date' value={inputstart} onChange={(event)=>{ inputStart(event) }} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <button onClick={ ()=>{submitTask()} }>Todoチケット作成</button>\n                            <div>\n                                {errors.map(\n                                    (error,index)=> {\n                                        return (\n                                            <div key={index}>\n                                                <h4>入力エラー{index + 1}</h4>\n                                                <h5>{error}</h5>\n                                            </div>\n                                        )\n                                    }\n                                )}\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </React.Fragment>\n    )\n}\n\n// ・チケット作成画面\n// 　・チケット名、詳細（内容）、担当者、期日、開始日　を入力して保存ができる => クリア\n// 　・保存ボタン押下後は一覧画面に遷移 => クリア\n\n// チケット作成画面　　　条件詳細 => 条件に合っているかどうか？ => バリデーション・チェック\n\n// -チケット名　← 1文字以上20文字以内　=> クリア\n\n// -詳細（内容）　←1文字以上300文字以内 => クリア\n\n// -担当者　1文字以上10文字以内 => クリア\n\n// -期日、開始日　←yyyy/mm/dd の記載方法でなければならない => 選択されているかどうかのチェック 現在との確認"]},"metadata":{},"sourceType":"module"}