{"ast":null,"code":"var _jsxFileName = \"/Users/yukimuramanase/Desktop/TS\\u30D5\\u309A\\u30ED\\u30B7\\u3099\\u30A7\\u30AF\\u30C8/react-ts-app/src/components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeTodo, addNewTodo } from '../actions/ActionCreator';\nimport { useHistory, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todoSelector = state => {\n  return state.StoreState.todolist;\n};\n\nexport const TodoList = () => {\n  _s();\n\n  const todoData = useSelector(todoSelector);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLink = path => {\n    return history.push(path);\n  };\n\n  const remove = index => {\n    dispatch(removeTodo(index));\n  };\n\n  const [inputString, setInput] = useState('');\n\n  const inputTodo = e => {\n    setInput(e.target.value);\n  };\n\n  const addTodo = () => {\n    if (inputString === '') {\n      return;\n    } else {\n      dispatch(addNewTodo(inputString));\n      setInput('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo\\u4E00\\u89A7\\u753B\\u9762\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30C1\\u30B1\\u30C3\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u62C5\\u5F53\\u8005\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todoData.map((todo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/detail/${todo.id}`,\n                children: todo.todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.handler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  remove(index);\n                },\n                children: \"\\u524A\\u9664\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}; // ・チケット一覧画面\n// 　・表示項目はID、チケット名、担当者\n// 　・一覧から削除ボタンを押すと削除可能\n// 　・チケット名を選択すると　対象の　チケット詳細画面を表示する\n\n_s(TodoList, \"LGWOCjP+ITKfKeInElyRZhNrbzE=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/yukimuramanase/Desktop/TSプロジェクト/react-ts-app/src/components/TodoList.tsx"],"names":["React","useState","useSelector","useDispatch","removeTodo","addNewTodo","useHistory","Link","todoSelector","state","StoreState","todolist","TodoList","todoData","dispatch","history","handleLink","path","push","remove","index","inputString","setInput","inputTodo","e","target","value","addTodo","map","todo","id","handler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;;;AAQA,MAAMC,YAAY,GAAIC,KAAD,IAAiB;AAClC,SAAOA,KAAK,CAACC,UAAN,CAAiBC,QAAxB;AACH,CAFD;;AAIA,OAAO,MAAMC,QAAkB,GAAG,MAAK;AAAA;;AAEnC,QAAMC,QAAQ,GAAGX,WAAW,CAACM,YAAD,CAA5B;AAEA,QAAMM,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,OAAO,GAAGT,UAAU,EAA1B;;AACA,QAAMU,UAAU,GAAIC,IAAD,IAAiB;AAAE,WAAOF,OAAO,CAACG,IAAR,CAAaD,IAAb,CAAP;AAA0B,GAAhE;;AAEA,QAAME,MAAM,GAAIC,KAAD,IAAkB;AAC7BN,IAAAA,QAAQ,CAACV,UAAU,CAACgB,KAAD,CAAX,CAAR;AACH,GAFD;;AAIA,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BrB,QAAQ,CAAS,EAAT,CAAxC;;AAEA,QAAMsB,SAAS,GAAIC,CAAD,IAAS;AACvBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAK;AACjB,QAAGN,WAAW,KAAK,EAAnB,EAAsB;AAClB;AACH,KAFD,MAEO;AACHP,MAAAA,QAAQ,CAACT,UAAU,CAACgB,WAAD,CAAX,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAPD;;AASA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAEIT,QAAQ,CAACe,GAAT,CACI,CAACC,IAAD,EAAYT,KAAZ,KAA4B;AACxB,8BACI;AAAA,oCACA;AAAA,wBAAKS,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,qCAAI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,WAAUD,IAAI,CAACC,EAAG,EAA7B;AAAA,0BAAkCD,IAAI,CAACA;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,qCAAI;AAAQ,gBAAA,OAAO,EAAG,MAAI;AAACZ,kBAAAA,MAAM,CAACC,KAAD,CAAN;AAAc,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA,aAASS,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SAVL;AAFJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA5DM,C,CA8DP;AACA;AACA;AACA;;GAjEalB,Q;UAEQV,W,EAEAC,W,EAEDG,U;;;KANPM,Q","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch} from 'react-redux'\nimport { removeTodo, addNewTodo } from '../actions/ActionCreator'\nimport { useHistory, Link } from 'react-router-dom'\n\ntype State = { // StoreStateで保持しているデータの型を定義する！ => データ構造が明確化される(見える化)！\n    StoreState:{\n      todolist: [id:number, todo:string, handler:string]\n    }\n  }\n  \nconst todoSelector = (state: State)=> {\n    return state.StoreState.todolist\n}\n\nexport const TodoList: React.FC = ()=> {\n\n    const todoData = useSelector(todoSelector)\n\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const handleLink = (path: string)=> { return history.push(path)}\n\n    const remove = (index: number)=> {\n        dispatch(removeTodo(index))\n    }\n\n    const [inputString, setInput] = useState<string>('') \n\n    const inputTodo = (e:any)=>{\n        setInput(e.target.value)\n    }\n\n    const addTodo = ()=> {\n        if(inputString === ''){\n            return \n        } else {\n            dispatch(addNewTodo(inputString))\n            setInput('')\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Todo一覧画面</h2>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>チケット</th>\n                        <th>担当者</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                    todoData.map(\n                        (todo: any, index: number)=>{\n                            return (\n                                <tr key={todo.id}>\n                                <td>{todo.id}</td>\n                                <td><Link to={`/detail/${todo.id}`} >{todo.todo}</Link></td>\n                                <td>{todo.handler}</td>\n                                <td><button onClick={ ()=>{remove(index)} }>削除</button></td>\n                                </tr>\n                            )\n                        }\n                    )\n                    }\n                </tbody>\n            </table>\n\n        </React.Fragment>\n    )\n}\n\n// ・チケット一覧画面\n// 　・表示項目はID、チケット名、担当者\n// 　・一覧から削除ボタンを押すと削除可能\n// 　・チケット名を選択すると　対象の　チケット詳細画面を表示する"]},"metadata":{},"sourceType":"module"}